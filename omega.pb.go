// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.12.4
// source: omega.proto

package omega

import (
	_struct "github.com/golang/protobuf/ptypes/struct"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Role int32

const (
	Role_RoleAll          Role = 0
	Role_RoleAdmin        Role = 1
	Role_RoleOwner        Role = 2
	Role_RoleParticipator Role = 3
)

// Enum value maps for Role.
var (
	Role_name = map[int32]string{
		0: "RoleAll",
		1: "RoleAdmin",
		2: "RoleOwner",
		3: "RoleParticipator",
	}
	Role_value = map[string]int32{
		"RoleAll":          0,
		"RoleAdmin":        1,
		"RoleOwner":        2,
		"RoleParticipator": 3,
	}
)

func (x Role) Enum() *Role {
	p := new(Role)
	*p = x
	return p
}

func (x Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Role) Descriptor() protoreflect.EnumDescriptor {
	return file_omega_proto_enumTypes[0].Descriptor()
}

func (Role) Type() protoreflect.EnumType {
	return &file_omega_proto_enumTypes[0]
}

func (x Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Role.Descriptor instead.
func (Role) EnumDescriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{0}
}

type Volume int32

const (
	Volume_VolumePeek    Volume = 0
	Volume_VolumeLowest  Volume = 1
	Volume_VolumeLow     Volume = 2
	Volume_VolumeMedium  Volume = 3
	Volume_VolumeHigh    Volume = 4
	Volume_VolumeHighest Volume = 5
)

// Enum value maps for Volume.
var (
	Volume_name = map[int32]string{
		0: "VolumePeek",
		1: "VolumeLowest",
		2: "VolumeLow",
		3: "VolumeMedium",
		4: "VolumeHigh",
		5: "VolumeHighest",
	}
	Volume_value = map[string]int32{
		"VolumePeek":    0,
		"VolumeLowest":  1,
		"VolumeLow":     2,
		"VolumeMedium":  3,
		"VolumeHigh":    4,
		"VolumeHighest": 5,
	}
)

func (x Volume) Enum() *Volume {
	p := new(Volume)
	*p = x
	return p
}

func (x Volume) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Volume) Descriptor() protoreflect.EnumDescriptor {
	return file_omega_proto_enumTypes[1].Descriptor()
}

func (Volume) Type() protoreflect.EnumType {
	return &file_omega_proto_enumTypes[1]
}

func (x Volume) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Volume.Descriptor instead.
func (Volume) EnumDescriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{1}
}

type TransitFrame_FrameClass int32

const (
	TransitFrame_ClassRequest            TransitFrame_FrameClass = 0
	TransitFrame_ClassResponse           TransitFrame_FrameClass = 1
	TransitFrame_ClassRequestReplay      TransitFrame_FrameClass = 2
	TransitFrame_ClassResponseReplay     TransitFrame_FrameClass = 3
	TransitFrame_ClassNotification       TransitFrame_FrameClass = 4
	TransitFrame_ClassNotificationReplay TransitFrame_FrameClass = 5
	TransitFrame_ClassError              TransitFrame_FrameClass = 9
)

// Enum value maps for TransitFrame_FrameClass.
var (
	TransitFrame_FrameClass_name = map[int32]string{
		0: "ClassRequest",
		1: "ClassResponse",
		2: "ClassRequestReplay",
		3: "ClassResponseReplay",
		4: "ClassNotification",
		5: "ClassNotificationReplay",
		9: "ClassError",
	}
	TransitFrame_FrameClass_value = map[string]int32{
		"ClassRequest":            0,
		"ClassResponse":           1,
		"ClassRequestReplay":      2,
		"ClassResponseReplay":     3,
		"ClassNotification":       4,
		"ClassNotificationReplay": 5,
		"ClassError":              9,
	}
)

func (x TransitFrame_FrameClass) Enum() *TransitFrame_FrameClass {
	p := new(TransitFrame_FrameClass)
	*p = x
	return p
}

func (x TransitFrame_FrameClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransitFrame_FrameClass) Descriptor() protoreflect.EnumDescriptor {
	return file_omega_proto_enumTypes[2].Descriptor()
}

func (TransitFrame_FrameClass) Type() protoreflect.EnumType {
	return &file_omega_proto_enumTypes[2]
}

func (x TransitFrame_FrameClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransitFrame_FrameClass.Descriptor instead.
func (TransitFrame_FrameClass) EnumDescriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{1, 0}
}

type TransitFrame_Version int32

const (
	TransitFrame_VersionBase TransitFrame_Version = 0
)

// Enum value maps for TransitFrame_Version.
var (
	TransitFrame_Version_name = map[int32]string{
		0: "VersionBase",
	}
	TransitFrame_Version_value = map[string]int32{
		"VersionBase": 0,
	}
)

func (x TransitFrame_Version) Enum() *TransitFrame_Version {
	p := new(TransitFrame_Version)
	*p = x
	return p
}

func (x TransitFrame_Version) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransitFrame_Version) Descriptor() protoreflect.EnumDescriptor {
	return file_omega_proto_enumTypes[3].Descriptor()
}

func (TransitFrame_Version) Type() protoreflect.EnumType {
	return &file_omega_proto_enumTypes[3]
}

func (x TransitFrame_Version) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TransitFrame_Version.Descriptor instead.
func (TransitFrame_Version) EnumDescriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{1, 1}
}

type VoteStatus_StatusType int32

const (
	VoteStatus_Allow VoteStatus_StatusType = 0
	VoteStatus_Deny  VoteStatus_StatusType = 1
)

// Enum value maps for VoteStatus_StatusType.
var (
	VoteStatus_StatusType_name = map[int32]string{
		0: "Allow",
		1: "Deny",
	}
	VoteStatus_StatusType_value = map[string]int32{
		"Allow": 0,
		"Deny":  1,
	}
)

func (x VoteStatus_StatusType) Enum() *VoteStatus_StatusType {
	p := new(VoteStatus_StatusType)
	*p = x
	return p
}

func (x VoteStatus_StatusType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VoteStatus_StatusType) Descriptor() protoreflect.EnumDescriptor {
	return file_omega_proto_enumTypes[4].Descriptor()
}

func (VoteStatus_StatusType) Type() protoreflect.EnumType {
	return &file_omega_proto_enumTypes[4]
}

func (x VoteStatus_StatusType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use VoteStatus_StatusType.Descriptor instead.
func (VoteStatus_StatusType) EnumDescriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{34, 0}
}

type Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ErrorLevel    string          `protobuf:"bytes,1,opt,name=error_level,proto3" json:"error_level,omitempty"`
	ErrorCategory string          `protobuf:"bytes,2,opt,name=error_category,proto3" json:"error_category,omitempty"`
	ErrorCode     string          `protobuf:"bytes,3,opt,name=error_code,proto3" json:"error_code,omitempty"`
	ErrorMessage  string          `protobuf:"bytes,4,opt,name=error_message,json=message,proto3" json:"error_message,omitempty"`
	StatusCode    int32           `protobuf:"varint,5,opt,name=status_code,proto3" json:"status_code,omitempty"`
	Name          string          `protobuf:"bytes,6,opt,name=name,json=error,proto3" json:"name,omitempty"`
	Description   string          `protobuf:"bytes,7,opt,name=description,json=error_description,proto3" json:"description,omitempty"`
	Data          *_struct.Struct `protobuf:"bytes,8,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *Error) Reset() {
	*x = Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Error) ProtoMessage() {}

func (x *Error) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Error.ProtoReflect.Descriptor instead.
func (*Error) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{0}
}

func (x *Error) GetErrorLevel() string {
	if x != nil {
		return x.ErrorLevel
	}
	return ""
}

func (x *Error) GetErrorCategory() string {
	if x != nil {
		return x.ErrorCategory
	}
	return ""
}

func (x *Error) GetErrorCode() string {
	if x != nil {
		return x.ErrorCode
	}
	return ""
}

func (x *Error) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *Error) GetStatusCode() int32 {
	if x != nil {
		return x.StatusCode
	}
	return 0
}

func (x *Error) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Error) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Error) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type TransitFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransitId        uint64                  `protobuf:"varint,1,opt,name=transit_id,json=i,proto3" json:"transit_id,omitempty"`
	Class            TransitFrame_FrameClass `protobuf:"varint,2,opt,name=class,json=c,proto3,enum=omega.TransitFrame_FrameClass" json:"class,omitempty"`
	Version          TransitFrame_Version    `protobuf:"varint,3,opt,name=version,json=v,proto3,enum=omega.TransitFrame_Version" json:"version,omitempty"`
	Timestamp        int64                   `protobuf:"varint,4,opt,name=timestamp,json=t,proto3" json:"timestamp,omitempty"`
	Error            *Error                  `protobuf:"bytes,5,opt,name=error,json=e,proto3" json:"error,omitempty"`
	MessageId        []byte                  `protobuf:"bytes,6,opt,name=message_id,json=m,proto3" json:"message_id,omitempty"`
	RefererMessageId []byte                  `protobuf:"bytes,7,opt,name=referer_message_id,json=rm,proto3" json:"referer_message_id,omitempty"`
	// Types that are assignable to Data:
	//	*TransitFrame_Close
	//	*TransitFrame_Ping
	//	*TransitFrame_Pong
	//	*TransitFrame_Stack
	//	*TransitFrame_Broadcast
	//	*TransitFrame_Hello
	//	*TransitFrame_ServerTime
	//	*TransitFrame_PlaybackChannelMessage
	//	*TransitFrame_GetChannelMeta
	//	*TransitFrame_SetChannelMeta
	//	*TransitFrame_CreateChannel
	//	*TransitFrame_JoinChannel
	//	*TransitFrame_LeaveChannel
	//	*TransitFrame_CloseChannel
	//	*TransitFrame_ChannelMessage
	//	*TransitFrame_ChannelCount
	//	*TransitFrame_ChannelOwnerMessage
	//	*TransitFrame_ReplayChannelMessage
	//	*TransitFrame_GetVoteMeta
	//	*TransitFrame_SetVoteMeta
	//	*TransitFrame_CreateVote
	//	*TransitFrame_JoinVote
	//	*TransitFrame_LeaveVote
	//	*TransitFrame_CloseVote
	//	*TransitFrame_VoteMessage
	//	*TransitFrame_VoteSelect
	//	*TransitFrame_VoteCount
	//	*TransitFrame_VoteOwnerMessage
	//	*TransitFrame_VoteStatus
	//	*TransitFrame_GetSessionMeta
	//	*TransitFrame_SetSessionMeta
	//	*TransitFrame_SessionMessage
	//	*TransitFrame_SessionsMessage
	Data isTransitFrame_Data `protobuf_oneof:"data"`
}

func (x *TransitFrame) Reset() {
	*x = TransitFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransitFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransitFrame) ProtoMessage() {}

func (x *TransitFrame) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransitFrame.ProtoReflect.Descriptor instead.
func (*TransitFrame) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{1}
}

func (x *TransitFrame) GetTransitId() uint64 {
	if x != nil {
		return x.TransitId
	}
	return 0
}

func (x *TransitFrame) GetClass() TransitFrame_FrameClass {
	if x != nil {
		return x.Class
	}
	return TransitFrame_ClassRequest
}

func (x *TransitFrame) GetVersion() TransitFrame_Version {
	if x != nil {
		return x.Version
	}
	return TransitFrame_VersionBase
}

func (x *TransitFrame) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *TransitFrame) GetError() *Error {
	if x != nil {
		return x.Error
	}
	return nil
}

func (x *TransitFrame) GetMessageId() []byte {
	if x != nil {
		return x.MessageId
	}
	return nil
}

func (x *TransitFrame) GetRefererMessageId() []byte {
	if x != nil {
		return x.RefererMessageId
	}
	return nil
}

func (m *TransitFrame) GetData() isTransitFrame_Data {
	if m != nil {
		return m.Data
	}
	return nil
}

func (x *TransitFrame) GetClose() *Close {
	if x, ok := x.GetData().(*TransitFrame_Close); ok {
		return x.Close
	}
	return nil
}

func (x *TransitFrame) GetPing() *Ping {
	if x, ok := x.GetData().(*TransitFrame_Ping); ok {
		return x.Ping
	}
	return nil
}

func (x *TransitFrame) GetPong() *Pong {
	if x, ok := x.GetData().(*TransitFrame_Pong); ok {
		return x.Pong
	}
	return nil
}

func (x *TransitFrame) GetStack() *Stack {
	if x, ok := x.GetData().(*TransitFrame_Stack); ok {
		return x.Stack
	}
	return nil
}

func (x *TransitFrame) GetBroadcast() *Broadcast {
	if x, ok := x.GetData().(*TransitFrame_Broadcast); ok {
		return x.Broadcast
	}
	return nil
}

func (x *TransitFrame) GetHello() *Hello {
	if x, ok := x.GetData().(*TransitFrame_Hello); ok {
		return x.Hello
	}
	return nil
}

func (x *TransitFrame) GetServerTime() *ServerTime {
	if x, ok := x.GetData().(*TransitFrame_ServerTime); ok {
		return x.ServerTime
	}
	return nil
}

func (x *TransitFrame) GetPlaybackChannelMessage() *PlaybackChannelMessage {
	if x, ok := x.GetData().(*TransitFrame_PlaybackChannelMessage); ok {
		return x.PlaybackChannelMessage
	}
	return nil
}

func (x *TransitFrame) GetGetChannelMeta() *GetChannelMeta {
	if x, ok := x.GetData().(*TransitFrame_GetChannelMeta); ok {
		return x.GetChannelMeta
	}
	return nil
}

func (x *TransitFrame) GetSetChannelMeta() *SetChannelMeta {
	if x, ok := x.GetData().(*TransitFrame_SetChannelMeta); ok {
		return x.SetChannelMeta
	}
	return nil
}

func (x *TransitFrame) GetCreateChannel() *CreateChannel {
	if x, ok := x.GetData().(*TransitFrame_CreateChannel); ok {
		return x.CreateChannel
	}
	return nil
}

func (x *TransitFrame) GetJoinChannel() *JoinChannel {
	if x, ok := x.GetData().(*TransitFrame_JoinChannel); ok {
		return x.JoinChannel
	}
	return nil
}

func (x *TransitFrame) GetLeaveChannel() *LeaveChannel {
	if x, ok := x.GetData().(*TransitFrame_LeaveChannel); ok {
		return x.LeaveChannel
	}
	return nil
}

func (x *TransitFrame) GetCloseChannel() *CloseChannel {
	if x, ok := x.GetData().(*TransitFrame_CloseChannel); ok {
		return x.CloseChannel
	}
	return nil
}

func (x *TransitFrame) GetChannelMessage() *ChannelMessage {
	if x, ok := x.GetData().(*TransitFrame_ChannelMessage); ok {
		return x.ChannelMessage
	}
	return nil
}

func (x *TransitFrame) GetChannelCount() *ChannelCount {
	if x, ok := x.GetData().(*TransitFrame_ChannelCount); ok {
		return x.ChannelCount
	}
	return nil
}

func (x *TransitFrame) GetChannelOwnerMessage() *ChannelOwnerMessage {
	if x, ok := x.GetData().(*TransitFrame_ChannelOwnerMessage); ok {
		return x.ChannelOwnerMessage
	}
	return nil
}

func (x *TransitFrame) GetReplayChannelMessage() *ReplayChannelMessage {
	if x, ok := x.GetData().(*TransitFrame_ReplayChannelMessage); ok {
		return x.ReplayChannelMessage
	}
	return nil
}

func (x *TransitFrame) GetGetVoteMeta() *GetVoteMeta {
	if x, ok := x.GetData().(*TransitFrame_GetVoteMeta); ok {
		return x.GetVoteMeta
	}
	return nil
}

func (x *TransitFrame) GetSetVoteMeta() *SetVoteMeta {
	if x, ok := x.GetData().(*TransitFrame_SetVoteMeta); ok {
		return x.SetVoteMeta
	}
	return nil
}

func (x *TransitFrame) GetCreateVote() *CreateVote {
	if x, ok := x.GetData().(*TransitFrame_CreateVote); ok {
		return x.CreateVote
	}
	return nil
}

func (x *TransitFrame) GetJoinVote() *JoinVote {
	if x, ok := x.GetData().(*TransitFrame_JoinVote); ok {
		return x.JoinVote
	}
	return nil
}

func (x *TransitFrame) GetLeaveVote() *LeaveVote {
	if x, ok := x.GetData().(*TransitFrame_LeaveVote); ok {
		return x.LeaveVote
	}
	return nil
}

func (x *TransitFrame) GetCloseVote() *CloseVote {
	if x, ok := x.GetData().(*TransitFrame_CloseVote); ok {
		return x.CloseVote
	}
	return nil
}

func (x *TransitFrame) GetVoteMessage() *VoteMessage {
	if x, ok := x.GetData().(*TransitFrame_VoteMessage); ok {
		return x.VoteMessage
	}
	return nil
}

func (x *TransitFrame) GetVoteSelect() *VoteSelect {
	if x, ok := x.GetData().(*TransitFrame_VoteSelect); ok {
		return x.VoteSelect
	}
	return nil
}

func (x *TransitFrame) GetVoteCount() *VoteCount {
	if x, ok := x.GetData().(*TransitFrame_VoteCount); ok {
		return x.VoteCount
	}
	return nil
}

func (x *TransitFrame) GetVoteOwnerMessage() *VoteOwnerMessage {
	if x, ok := x.GetData().(*TransitFrame_VoteOwnerMessage); ok {
		return x.VoteOwnerMessage
	}
	return nil
}

func (x *TransitFrame) GetVoteStatus() *VoteStatus {
	if x, ok := x.GetData().(*TransitFrame_VoteStatus); ok {
		return x.VoteStatus
	}
	return nil
}

func (x *TransitFrame) GetGetSessionMeta() *GetSessionMeta {
	if x, ok := x.GetData().(*TransitFrame_GetSessionMeta); ok {
		return x.GetSessionMeta
	}
	return nil
}

func (x *TransitFrame) GetSetSessionMeta() *SetSessionMeta {
	if x, ok := x.GetData().(*TransitFrame_SetSessionMeta); ok {
		return x.SetSessionMeta
	}
	return nil
}

func (x *TransitFrame) GetSessionMessage() *SessionMessage {
	if x, ok := x.GetData().(*TransitFrame_SessionMessage); ok {
		return x.SessionMessage
	}
	return nil
}

func (x *TransitFrame) GetSessionsMessage() *SessionsMessage {
	if x, ok := x.GetData().(*TransitFrame_SessionsMessage); ok {
		return x.SessionsMessage
	}
	return nil
}

type isTransitFrame_Data interface {
	isTransitFrame_Data()
}

type TransitFrame_Close struct {
	Close *Close `protobuf:"bytes,8,opt,name=Close,proto3,oneof"`
}

type TransitFrame_Ping struct {
	Ping *Ping `protobuf:"bytes,9,opt,name=Ping,proto3,oneof"`
}

type TransitFrame_Pong struct {
	Pong *Pong `protobuf:"bytes,10,opt,name=Pong,proto3,oneof"`
}

type TransitFrame_Stack struct {
	Stack *Stack `protobuf:"bytes,16,opt,name=Stack,proto3,oneof"`
}

type TransitFrame_Broadcast struct {
	Broadcast *Broadcast `protobuf:"bytes,18,opt,name=Broadcast,proto3,oneof"`
}

type TransitFrame_Hello struct {
	Hello *Hello `protobuf:"bytes,19,opt,name=Hello,proto3,oneof"`
}

type TransitFrame_ServerTime struct {
	ServerTime *ServerTime `protobuf:"bytes,20,opt,name=ServerTime,proto3,oneof"`
}

type TransitFrame_PlaybackChannelMessage struct {
	PlaybackChannelMessage *PlaybackChannelMessage `protobuf:"bytes,100,opt,name=PlaybackChannelMessage,proto3,oneof"`
}

type TransitFrame_GetChannelMeta struct {
	GetChannelMeta *GetChannelMeta `protobuf:"bytes,200,opt,name=GetChannelMeta,proto3,oneof"`
}

type TransitFrame_SetChannelMeta struct {
	SetChannelMeta *SetChannelMeta `protobuf:"bytes,201,opt,name=SetChannelMeta,proto3,oneof"`
}

type TransitFrame_CreateChannel struct {
	CreateChannel *CreateChannel `protobuf:"bytes,202,opt,name=CreateChannel,proto3,oneof"`
}

type TransitFrame_JoinChannel struct {
	JoinChannel *JoinChannel `protobuf:"bytes,203,opt,name=JoinChannel,proto3,oneof"`
}

type TransitFrame_LeaveChannel struct {
	LeaveChannel *LeaveChannel `protobuf:"bytes,204,opt,name=LeaveChannel,proto3,oneof"`
}

type TransitFrame_CloseChannel struct {
	CloseChannel *CloseChannel `protobuf:"bytes,205,opt,name=CloseChannel,proto3,oneof"`
}

type TransitFrame_ChannelMessage struct {
	ChannelMessage *ChannelMessage `protobuf:"bytes,206,opt,name=ChannelMessage,proto3,oneof"`
}

type TransitFrame_ChannelCount struct {
	ChannelCount *ChannelCount `protobuf:"bytes,208,opt,name=ChannelCount,proto3,oneof"`
}

type TransitFrame_ChannelOwnerMessage struct {
	ChannelOwnerMessage *ChannelOwnerMessage `protobuf:"bytes,209,opt,name=ChannelOwnerMessage,proto3,oneof"`
}

type TransitFrame_ReplayChannelMessage struct {
	ReplayChannelMessage *ReplayChannelMessage `protobuf:"bytes,211,opt,name=ReplayChannelMessage,proto3,oneof"`
}

type TransitFrame_GetVoteMeta struct {
	GetVoteMeta *GetVoteMeta `protobuf:"bytes,230,opt,name=GetVoteMeta,proto3,oneof"`
}

type TransitFrame_SetVoteMeta struct {
	SetVoteMeta *SetVoteMeta `protobuf:"bytes,231,opt,name=SetVoteMeta,proto3,oneof"`
}

type TransitFrame_CreateVote struct {
	CreateVote *CreateVote `protobuf:"bytes,232,opt,name=CreateVote,proto3,oneof"`
}

type TransitFrame_JoinVote struct {
	JoinVote *JoinVote `protobuf:"bytes,233,opt,name=JoinVote,proto3,oneof"`
}

type TransitFrame_LeaveVote struct {
	LeaveVote *LeaveVote `protobuf:"bytes,234,opt,name=LeaveVote,proto3,oneof"`
}

type TransitFrame_CloseVote struct {
	CloseVote *CloseVote `protobuf:"bytes,235,opt,name=CloseVote,proto3,oneof"`
}

type TransitFrame_VoteMessage struct {
	VoteMessage *VoteMessage `protobuf:"bytes,236,opt,name=VoteMessage,proto3,oneof"`
}

type TransitFrame_VoteSelect struct {
	VoteSelect *VoteSelect `protobuf:"bytes,237,opt,name=VoteSelect,proto3,oneof"`
}

type TransitFrame_VoteCount struct {
	VoteCount *VoteCount `protobuf:"bytes,238,opt,name=VoteCount,proto3,oneof"`
}

type TransitFrame_VoteOwnerMessage struct {
	VoteOwnerMessage *VoteOwnerMessage `protobuf:"bytes,239,opt,name=VoteOwnerMessage,proto3,oneof"`
}

type TransitFrame_VoteStatus struct {
	VoteStatus *VoteStatus `protobuf:"bytes,240,opt,name=VoteStatus,proto3,oneof"`
}

type TransitFrame_GetSessionMeta struct {
	GetSessionMeta *GetSessionMeta `protobuf:"bytes,250,opt,name=GetSessionMeta,proto3,oneof"`
}

type TransitFrame_SetSessionMeta struct {
	SetSessionMeta *SetSessionMeta `protobuf:"bytes,251,opt,name=SetSessionMeta,proto3,oneof"`
}

type TransitFrame_SessionMessage struct {
	SessionMessage *SessionMessage `protobuf:"bytes,252,opt,name=SessionMessage,proto3,oneof"`
}

type TransitFrame_SessionsMessage struct {
	SessionsMessage *SessionsMessage `protobuf:"bytes,253,opt,name=SessionsMessage,proto3,oneof"`
}

func (*TransitFrame_Close) isTransitFrame_Data() {}

func (*TransitFrame_Ping) isTransitFrame_Data() {}

func (*TransitFrame_Pong) isTransitFrame_Data() {}

func (*TransitFrame_Stack) isTransitFrame_Data() {}

func (*TransitFrame_Broadcast) isTransitFrame_Data() {}

func (*TransitFrame_Hello) isTransitFrame_Data() {}

func (*TransitFrame_ServerTime) isTransitFrame_Data() {}

func (*TransitFrame_PlaybackChannelMessage) isTransitFrame_Data() {}

func (*TransitFrame_GetChannelMeta) isTransitFrame_Data() {}

func (*TransitFrame_SetChannelMeta) isTransitFrame_Data() {}

func (*TransitFrame_CreateChannel) isTransitFrame_Data() {}

func (*TransitFrame_JoinChannel) isTransitFrame_Data() {}

func (*TransitFrame_LeaveChannel) isTransitFrame_Data() {}

func (*TransitFrame_CloseChannel) isTransitFrame_Data() {}

func (*TransitFrame_ChannelMessage) isTransitFrame_Data() {}

func (*TransitFrame_ChannelCount) isTransitFrame_Data() {}

func (*TransitFrame_ChannelOwnerMessage) isTransitFrame_Data() {}

func (*TransitFrame_ReplayChannelMessage) isTransitFrame_Data() {}

func (*TransitFrame_GetVoteMeta) isTransitFrame_Data() {}

func (*TransitFrame_SetVoteMeta) isTransitFrame_Data() {}

func (*TransitFrame_CreateVote) isTransitFrame_Data() {}

func (*TransitFrame_JoinVote) isTransitFrame_Data() {}

func (*TransitFrame_LeaveVote) isTransitFrame_Data() {}

func (*TransitFrame_CloseVote) isTransitFrame_Data() {}

func (*TransitFrame_VoteMessage) isTransitFrame_Data() {}

func (*TransitFrame_VoteSelect) isTransitFrame_Data() {}

func (*TransitFrame_VoteCount) isTransitFrame_Data() {}

func (*TransitFrame_VoteOwnerMessage) isTransitFrame_Data() {}

func (*TransitFrame_VoteStatus) isTransitFrame_Data() {}

func (*TransitFrame_GetSessionMeta) isTransitFrame_Data() {}

func (*TransitFrame_SetSessionMeta) isTransitFrame_Data() {}

func (*TransitFrame_SessionMessage) isTransitFrame_Data() {}

func (*TransitFrame_SessionsMessage) isTransitFrame_Data() {}

type Close struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Close) Reset() {
	*x = Close{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Close) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Close) ProtoMessage() {}

func (x *Close) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Close.ProtoReflect.Descriptor instead.
func (*Close) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{2}
}

type Ping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Ping) Reset() {
	*x = Ping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Ping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Ping) ProtoMessage() {}

func (x *Ping) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Ping.ProtoReflect.Descriptor instead.
func (*Ping) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{3}
}

type Pong struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Pong) Reset() {
	*x = Pong{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pong) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pong) ProtoMessage() {}

func (x *Pong) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pong.ProtoReflect.Descriptor instead.
func (*Pong) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{4}
}

type Stack struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StackCount int32           `protobuf:"varint,2,opt,name=stack_count,json=c,proto3" json:"stack_count,omitempty"`
	Frames     []*TransitFrame `protobuf:"bytes,3,rep,name=frames,json=f,proto3" json:"frames,omitempty"`
}

func (x *Stack) Reset() {
	*x = Stack{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Stack) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stack) ProtoMessage() {}

func (x *Stack) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stack.ProtoReflect.Descriptor instead.
func (*Stack) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{5}
}

func (x *Stack) GetStackCount() int32 {
	if x != nil {
		return x.StackCount
	}
	return 0
}

func (x *Stack) GetFrames() []*TransitFrame {
	if x != nil {
		return x.Frames
	}
	return nil
}

type Broadcast struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,2,opt,name=message,json=m,proto3" json:"message,omitempty"`
}

func (x *Broadcast) Reset() {
	*x = Broadcast{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Broadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast) ProtoMessage() {}

func (x *Broadcast) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast.ProtoReflect.Descriptor instead.
func (*Broadcast) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{6}
}

func (x *Broadcast) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type Hello struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,2,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	Subject     string `protobuf:"bytes,3,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	SubjectName string `protobuf:"bytes,4,opt,name=subject_name,json=sn,proto3" json:"subject_name,omitempty"`
}

func (x *Hello) Reset() {
	*x = Hello{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hello) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hello) ProtoMessage() {}

func (x *Hello) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hello.ProtoReflect.Descriptor instead.
func (*Hello) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{7}
}

func (x *Hello) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *Hello) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *Hello) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

type ServerTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UnixNano      int64 `protobuf:"varint,2,opt,name=unix_nano,json=n,proto3" json:"unix_nano,omitempty"`
	UnixTimestamp int64 `protobuf:"varint,3,opt,name=unix_timestamp,json=t,proto3" json:"unix_timestamp,omitempty"`
}

func (x *ServerTime) Reset() {
	*x = ServerTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerTime) ProtoMessage() {}

func (x *ServerTime) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerTime.ProtoReflect.Descriptor instead.
func (*ServerTime) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{8}
}

func (x *ServerTime) GetUnixNano() int64 {
	if x != nil {
		return x.UnixNano
	}
	return 0
}

func (x *ServerTime) GetUnixTimestamp() int64 {
	if x != nil {
		return x.UnixTimestamp
	}
	return 0
}

type PlaybackChannelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	EndedAt   int64  `protobuf:"varint,3,opt,name=ended_at,json=ea,proto3" json:"ended_at,omitempty"`
	NextId    string `protobuf:"bytes,4,opt,name=next_id,json=ni,proto3" json:"next_id,omitempty"`
	Volume    Volume `protobuf:"varint,5,opt,name=volume,json=v,proto3,enum=omega.Volume" json:"volume,omitempty"`
	Count     int32  `protobuf:"varint,6,opt,name=count,json=c,proto3" json:"count,omitempty"`
	Inverse   bool   `protobuf:"varint,7,opt,name=inverse,json=iv,proto3" json:"inverse,omitempty"`
}

func (x *PlaybackChannelMessage) Reset() {
	*x = PlaybackChannelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PlaybackChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PlaybackChannelMessage) ProtoMessage() {}

func (x *PlaybackChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PlaybackChannelMessage.ProtoReflect.Descriptor instead.
func (*PlaybackChannelMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{9}
}

func (x *PlaybackChannelMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *PlaybackChannelMessage) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *PlaybackChannelMessage) GetNextId() string {
	if x != nil {
		return x.NextId
	}
	return ""
}

func (x *PlaybackChannelMessage) GetVolume() Volume {
	if x != nil {
		return x.Volume
	}
	return Volume_VolumePeek
}

func (x *PlaybackChannelMessage) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *PlaybackChannelMessage) GetInverse() bool {
	if x != nil {
		return x.Inverse
	}
	return false
}

type GetChannelMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *_struct.Struct `protobuf:"bytes,1,opt,name=data,json=d,proto3" json:"data,omitempty"`
	ChannelId string          `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	Name      string          `protobuf:"bytes,3,opt,name=name,json=n,proto3" json:"name,omitempty"`
	Offset    int64           `protobuf:"varint,4,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
	CreatedAt int64           `protobuf:"varint,5,opt,name=created_at,json=ca,proto3" json:"created_at,omitempty"`
}

func (x *GetChannelMeta) Reset() {
	*x = GetChannelMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChannelMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChannelMeta) ProtoMessage() {}

func (x *GetChannelMeta) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChannelMeta.ProtoReflect.Descriptor instead.
func (*GetChannelMeta) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{10}
}

func (x *GetChannelMeta) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetChannelMeta) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *GetChannelMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetChannelMeta) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetChannelMeta) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SetChannelMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *_struct.Struct `protobuf:"bytes,1,opt,name=data,json=d,proto3" json:"data,omitempty"`
	ChannelId string          `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	Name      string          `protobuf:"bytes,3,opt,name=name,json=n,proto3" json:"name,omitempty"`
	Offset    int64           `protobuf:"varint,4,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
}

func (x *SetChannelMeta) Reset() {
	*x = SetChannelMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetChannelMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetChannelMeta) ProtoMessage() {}

func (x *SetChannelMeta) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetChannelMeta.ProtoReflect.Descriptor instead.
func (*SetChannelMeta) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{11}
}

func (x *SetChannelMeta) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetChannelMeta) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *SetChannelMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetChannelMeta) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CreateChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateChannel) Reset() {
	*x = CreateChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateChannel) ProtoMessage() {}

func (x *CreateChannel) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateChannel.ProtoReflect.Descriptor instead.
func (*CreateChannel) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{12}
}

type JoinChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId       string          `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	Name            string          `protobuf:"bytes,3,opt,name=name,json=n,proto3" json:"name,omitempty"`
	ChannelMetadata *_struct.Struct `protobuf:"bytes,4,opt,name=channel_metadata,json=chm,proto3" json:"channel_metadata,omitempty"`
	SessionId       string          `protobuf:"bytes,5,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	Subject         string          `protobuf:"bytes,6,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	SubjectName     string          `protobuf:"bytes,7,opt,name=subject_name,json=sn,proto3" json:"subject_name,omitempty"`
	SessionMetadata *_struct.Struct `protobuf:"bytes,8,opt,name=session_metadata,json=sm,proto3" json:"session_metadata,omitempty"`
	Key             string          `protobuf:"bytes,9,opt,name=key,json=k,proto3" json:"key,omitempty"`
	Role            string          `protobuf:"bytes,10,opt,name=role,json=r,proto3" json:"role,omitempty"`
	Offset          int64           `protobuf:"varint,11,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
	CreatedAt       int64           `protobuf:"varint,12,opt,name=created_at,json=ca,proto3" json:"created_at,omitempty"`
}

func (x *JoinChannel) Reset() {
	*x = JoinChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinChannel) ProtoMessage() {}

func (x *JoinChannel) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinChannel.ProtoReflect.Descriptor instead.
func (*JoinChannel) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{13}
}

func (x *JoinChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *JoinChannel) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JoinChannel) GetChannelMetadata() *_struct.Struct {
	if x != nil {
		return x.ChannelMetadata
	}
	return nil
}

func (x *JoinChannel) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *JoinChannel) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *JoinChannel) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *JoinChannel) GetSessionMetadata() *_struct.Struct {
	if x != nil {
		return x.SessionMetadata
	}
	return nil
}

func (x *JoinChannel) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JoinChannel) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *JoinChannel) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *JoinChannel) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type LeaveChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	Offset    int64  `protobuf:"varint,4,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
}

func (x *LeaveChannel) Reset() {
	*x = LeaveChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveChannel) ProtoMessage() {}

func (x *LeaveChannel) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveChannel.ProtoReflect.Descriptor instead.
func (*LeaveChannel) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{14}
}

func (x *LeaveChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *LeaveChannel) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *LeaveChannel) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type CloseChannel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	Key       string `protobuf:"bytes,3,opt,name=key,json=k,proto3" json:"key,omitempty"`
	Offset    int64  `protobuf:"varint,4,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
}

func (x *CloseChannel) Reset() {
	*x = CloseChannel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseChannel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseChannel) ProtoMessage() {}

func (x *CloseChannel) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseChannel.ProtoReflect.Descriptor instead.
func (*CloseChannel) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{15}
}

func (x *CloseChannel) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *CloseChannel) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *CloseChannel) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

type ChannelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId   string `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	FromSession string `protobuf:"bytes,3,opt,name=from_session,json=fs,proto3" json:"from_session,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,json=m,proto3" json:"message,omitempty"`
	Offset      int64  `protobuf:"varint,5,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
	Subject     string `protobuf:"bytes,6,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	SubjectName string `protobuf:"bytes,7,opt,name=subject_name,json=sn,proto3" json:"subject_name,omitempty"`
	Sequential  bool   `protobuf:"varint,8,opt,name=sequential,json=se,proto3" json:"sequential,omitempty"`
	Role        Role   `protobuf:"varint,9,opt,name=role,json=rl,proto3,enum=omega.Role" json:"role,omitempty"`
}

func (x *ChannelMessage) Reset() {
	*x = ChannelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelMessage) ProtoMessage() {}

func (x *ChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelMessage.ProtoReflect.Descriptor instead.
func (*ChannelMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{16}
}

func (x *ChannelMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelMessage) GetFromSession() string {
	if x != nil {
		return x.FromSession
	}
	return ""
}

func (x *ChannelMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChannelMessage) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ChannelMessage) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ChannelMessage) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *ChannelMessage) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

func (x *ChannelMessage) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_RoleAll
}

type ChannelOwnerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId   string `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	FromSession string `protobuf:"bytes,3,opt,name=from_session,json=fs,proto3" json:"from_session,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,json=m,proto3" json:"message,omitempty"`
	Offset      int64  `protobuf:"varint,5,opt,name=offset,json=o,proto3" json:"offset,omitempty"`
	Subject     string `protobuf:"bytes,6,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	SubjectName string `protobuf:"bytes,7,opt,name=subject_name,json=sn,proto3" json:"subject_name,omitempty"`
	Sequential  bool   `protobuf:"varint,8,opt,name=sequential,json=se,proto3" json:"sequential,omitempty"`
}

func (x *ChannelOwnerMessage) Reset() {
	*x = ChannelOwnerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelOwnerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelOwnerMessage) ProtoMessage() {}

func (x *ChannelOwnerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelOwnerMessage.ProtoReflect.Descriptor instead.
func (*ChannelOwnerMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{17}
}

func (x *ChannelOwnerMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelOwnerMessage) GetFromSession() string {
	if x != nil {
		return x.FromSession
	}
	return ""
}

func (x *ChannelOwnerMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChannelOwnerMessage) GetOffset() int64 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *ChannelOwnerMessage) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *ChannelOwnerMessage) GetSubjectName() string {
	if x != nil {
		return x.SubjectName
	}
	return ""
}

func (x *ChannelOwnerMessage) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

type ChannelCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId         string `protobuf:"bytes,1,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	OwnerCount        int32  `protobuf:"varint,2,opt,name=owner_count,json=oc,proto3" json:"owner_count,omitempty"`
	ParticipatorCount int32  `protobuf:"varint,3,opt,name=participator_count,json=pc,proto3" json:"participator_count,omitempty"`
	Count             int32  `protobuf:"varint,4,opt,name=count,json=c,proto3" json:"count,omitempty"`
}

func (x *ChannelCount) Reset() {
	*x = ChannelCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChannelCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChannelCount) ProtoMessage() {}

func (x *ChannelCount) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChannelCount.ProtoReflect.Descriptor instead.
func (*ChannelCount) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{18}
}

func (x *ChannelCount) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChannelCount) GetOwnerCount() int32 {
	if x != nil {
		return x.OwnerCount
	}
	return 0
}

func (x *ChannelCount) GetParticipatorCount() int32 {
	if x != nil {
		return x.ParticipatorCount
	}
	return 0
}

func (x *ChannelCount) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type ReplayChannelMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChannelId string `protobuf:"bytes,2,opt,name=channel_id,json=ch,proto3" json:"channel_id,omitempty"`
	EndedAt   int64  `protobuf:"varint,3,opt,name=ended_at,json=ea,proto3" json:"ended_at,omitempty"`
	NextId    string `protobuf:"bytes,4,opt,name=next_id,json=ni,proto3" json:"next_id,omitempty"`
	Volume    Volume `protobuf:"varint,5,opt,name=volume,json=v,proto3,enum=omega.Volume" json:"volume,omitempty"`
	Count     int32  `protobuf:"varint,6,opt,name=count,json=c,proto3" json:"count,omitempty"`
	Inverse   bool   `protobuf:"varint,7,opt,name=inverse,json=iv,proto3" json:"inverse,omitempty"`
}

func (x *ReplayChannelMessage) Reset() {
	*x = ReplayChannelMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReplayChannelMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReplayChannelMessage) ProtoMessage() {}

func (x *ReplayChannelMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReplayChannelMessage.ProtoReflect.Descriptor instead.
func (*ReplayChannelMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{19}
}

func (x *ReplayChannelMessage) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ReplayChannelMessage) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *ReplayChannelMessage) GetNextId() string {
	if x != nil {
		return x.NextId
	}
	return ""
}

func (x *ReplayChannelMessage) GetVolume() Volume {
	if x != nil {
		return x.Volume
	}
	return Volume_VolumePeek
}

func (x *ReplayChannelMessage) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *ReplayChannelMessage) GetInverse() bool {
	if x != nil {
		return x.Inverse
	}
	return false
}

type GetSessionMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *_struct.Struct `protobuf:"bytes,1,opt,name=data,json=d,proto3" json:"data,omitempty"`
	SessionId string          `protobuf:"bytes,2,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	Subject   string          `protobuf:"bytes,3,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	Name      string          `protobuf:"bytes,4,opt,name=name,json=n,proto3" json:"name,omitempty"`
}

func (x *GetSessionMeta) Reset() {
	*x = GetSessionMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetSessionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetSessionMeta) ProtoMessage() {}

func (x *GetSessionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetSessionMeta.ProtoReflect.Descriptor instead.
func (*GetSessionMeta) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{20}
}

func (x *GetSessionMeta) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetSessionMeta) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *GetSessionMeta) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *GetSessionMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SetSessionMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data      *_struct.Struct `protobuf:"bytes,1,opt,name=data,json=d,proto3" json:"data,omitempty"`
	SessionId string          `protobuf:"bytes,2,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	Name      string          `protobuf:"bytes,3,opt,name=name,json=n,proto3" json:"name,omitempty"`
}

func (x *SetSessionMeta) Reset() {
	*x = SetSessionMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSessionMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSessionMeta) ProtoMessage() {}

func (x *SetSessionMeta) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSessionMeta.ProtoReflect.Descriptor instead.
func (*SetSessionMeta) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{21}
}

func (x *SetSessionMeta) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SetSessionMeta) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SetSessionMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type SessionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromSession string `protobuf:"bytes,2,opt,name=from_session,json=fs,proto3" json:"from_session,omitempty"`
	ToSession   string `protobuf:"bytes,3,opt,name=to_session,json=ts,proto3" json:"to_session,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,json=m,proto3" json:"message,omitempty"`
	Sequential  bool   `protobuf:"varint,8,opt,name=sequential,json=se,proto3" json:"sequential,omitempty"`
}

func (x *SessionMessage) Reset() {
	*x = SessionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionMessage) ProtoMessage() {}

func (x *SessionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionMessage.ProtoReflect.Descriptor instead.
func (*SessionMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{22}
}

func (x *SessionMessage) GetFromSession() string {
	if x != nil {
		return x.FromSession
	}
	return ""
}

func (x *SessionMessage) GetToSession() string {
	if x != nil {
		return x.ToSession
	}
	return ""
}

func (x *SessionMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SessionMessage) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

type SessionsMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FromSession string   `protobuf:"bytes,2,opt,name=from_session,json=fs,proto3" json:"from_session,omitempty"`
	ToSessions  []string `protobuf:"bytes,3,rep,name=to_sessions,json=tss,proto3" json:"to_sessions,omitempty"`
	Message     string   `protobuf:"bytes,4,opt,name=message,json=m,proto3" json:"message,omitempty"`
	Sequential  bool     `protobuf:"varint,8,opt,name=sequential,json=se,proto3" json:"sequential,omitempty"`
}

func (x *SessionsMessage) Reset() {
	*x = SessionsMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionsMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionsMessage) ProtoMessage() {}

func (x *SessionsMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionsMessage.ProtoReflect.Descriptor instead.
func (*SessionsMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{23}
}

func (x *SessionsMessage) GetFromSession() string {
	if x != nil {
		return x.FromSession
	}
	return ""
}

func (x *SessionsMessage) GetToSessions() []string {
	if x != nil {
		return x.ToSessions
	}
	return nil
}

func (x *SessionsMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SessionsMessage) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

type GetVoteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId    string          `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Name      string          `protobuf:"bytes,2,opt,name=name,json=n,proto3" json:"name,omitempty"`
	Data      *_struct.Struct `protobuf:"bytes,3,opt,name=data,json=d,proto3" json:"data,omitempty"`
	CreatedAt int64           `protobuf:"varint,5,opt,name=created_at,json=ca,proto3" json:"created_at,omitempty"`
}

func (x *GetVoteMeta) Reset() {
	*x = GetVoteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVoteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVoteMeta) ProtoMessage() {}

func (x *GetVoteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVoteMeta.ProtoReflect.Descriptor instead.
func (*GetVoteMeta) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{24}
}

func (x *GetVoteMeta) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *GetVoteMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetVoteMeta) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *GetVoteMeta) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type SetVoteMeta struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId string          `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Name   string          `protobuf:"bytes,2,opt,name=name,json=n,proto3" json:"name,omitempty"`
	Data   *_struct.Struct `protobuf:"bytes,3,opt,name=data,json=d,proto3" json:"data,omitempty"`
}

func (x *SetVoteMeta) Reset() {
	*x = SetVoteMeta{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetVoteMeta) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetVoteMeta) ProtoMessage() {}

func (x *SetVoteMeta) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetVoteMeta.ProtoReflect.Descriptor instead.
func (*SetVoteMeta) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{25}
}

func (x *SetVoteMeta) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *SetVoteMeta) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *SetVoteMeta) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CreateVote) Reset() {
	*x = CreateVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVote) ProtoMessage() {}

func (x *CreateVote) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVote.ProtoReflect.Descriptor instead.
func (*CreateVote) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{26}
}

type JoinVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId          string          `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Name            string          `protobuf:"bytes,2,opt,name=name,json=n,proto3" json:"name,omitempty"`
	VoteMetadata    *_struct.Struct `protobuf:"bytes,3,opt,name=vote_metadata,json=vtm,proto3" json:"vote_metadata,omitempty"`
	SessionId       string          `protobuf:"bytes,4,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	SessionMetadata *_struct.Struct `protobuf:"bytes,5,opt,name=session_metadata,json=sm,proto3" json:"session_metadata,omitempty"`
	Key             string          `protobuf:"bytes,6,opt,name=key,json=k,proto3" json:"key,omitempty"`
	Data            *_struct.Struct `protobuf:"bytes,7,opt,name=data,json=d,proto3" json:"data,omitempty"`
	CreatedAt       int64           `protobuf:"varint,8,opt,name=created_at,json=ca,proto3" json:"created_at,omitempty"`
}

func (x *JoinVote) Reset() {
	*x = JoinVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *JoinVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinVote) ProtoMessage() {}

func (x *JoinVote) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinVote.ProtoReflect.Descriptor instead.
func (*JoinVote) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{27}
}

func (x *JoinVote) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *JoinVote) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JoinVote) GetVoteMetadata() *_struct.Struct {
	if x != nil {
		return x.VoteMetadata
	}
	return nil
}

func (x *JoinVote) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *JoinVote) GetSessionMetadata() *_struct.Struct {
	if x != nil {
		return x.SessionMetadata
	}
	return nil
}

func (x *JoinVote) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *JoinVote) GetData() *_struct.Struct {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *JoinVote) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type LeaveVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId    string `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	SessionId string `protobuf:"bytes,2,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
}

func (x *LeaveVote) Reset() {
	*x = LeaveVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LeaveVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveVote) ProtoMessage() {}

func (x *LeaveVote) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveVote.ProtoReflect.Descriptor instead.
func (*LeaveVote) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{28}
}

func (x *LeaveVote) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *LeaveVote) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

type CloseVote struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId string `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,json=k,proto3" json:"key,omitempty"`
}

func (x *CloseVote) Reset() {
	*x = CloseVote{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseVote) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseVote) ProtoMessage() {}

func (x *CloseVote) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseVote.ProtoReflect.Descriptor instead.
func (*CloseVote) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{29}
}

func (x *CloseVote) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *CloseVote) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type VoteMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId      string `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	FromSession string `protobuf:"bytes,2,opt,name=from_session,json=fs,proto3" json:"from_session,omitempty"`
	Subject     string `protobuf:"bytes,3,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	Message     string `protobuf:"bytes,4,opt,name=message,json=m,proto3" json:"message,omitempty"`
	Sequential  bool   `protobuf:"varint,8,opt,name=sequential,json=se,proto3" json:"sequential,omitempty"`
	Role        Role   `protobuf:"varint,9,opt,name=role,json=rl,proto3,enum=omega.Role" json:"role,omitempty"`
}

func (x *VoteMessage) Reset() {
	*x = VoteMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteMessage) ProtoMessage() {}

func (x *VoteMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteMessage.ProtoReflect.Descriptor instead.
func (*VoteMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{30}
}

func (x *VoteMessage) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *VoteMessage) GetFromSession() string {
	if x != nil {
		return x.FromSession
	}
	return ""
}

func (x *VoteMessage) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VoteMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VoteMessage) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

func (x *VoteMessage) GetRole() Role {
	if x != nil {
		return x.Role
	}
	return Role_RoleAll
}

type VoteSelect struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId       string `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	SessionId    string `protobuf:"bytes,2,opt,name=session_id,json=s,proto3" json:"session_id,omitempty"`
	Subject      string `protobuf:"bytes,3,opt,name=subject,json=sub,proto3" json:"subject,omitempty"`
	VoteOptionId string `protobuf:"bytes,4,opt,name=vote_option_id,json=vto,proto3" json:"vote_option_id,omitempty"`
	Deny         bool   `protobuf:"varint,5,opt,name=deny,json=de,proto3" json:"deny,omitempty"`
}

func (x *VoteSelect) Reset() {
	*x = VoteSelect{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteSelect) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteSelect) ProtoMessage() {}

func (x *VoteSelect) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteSelect.ProtoReflect.Descriptor instead.
func (*VoteSelect) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{31}
}

func (x *VoteSelect) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *VoteSelect) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VoteSelect) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *VoteSelect) GetVoteOptionId() string {
	if x != nil {
		return x.VoteOptionId
	}
	return ""
}

func (x *VoteSelect) GetDeny() bool {
	if x != nil {
		return x.Deny
	}
	return false
}

type VoteCount struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId string `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Key    string `protobuf:"bytes,2,opt,name=key,json=k,proto3" json:"key,omitempty"`
}

func (x *VoteCount) Reset() {
	*x = VoteCount{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteCount) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteCount) ProtoMessage() {}

func (x *VoteCount) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteCount.ProtoReflect.Descriptor instead.
func (*VoteCount) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{32}
}

func (x *VoteCount) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *VoteCount) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type VoteOwnerMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId     string `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Message    string `protobuf:"bytes,2,opt,name=message,json=m,proto3" json:"message,omitempty"`
	Sequential bool   `protobuf:"varint,8,opt,name=sequential,json=se,proto3" json:"sequential,omitempty"`
}

func (x *VoteOwnerMessage) Reset() {
	*x = VoteOwnerMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteOwnerMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteOwnerMessage) ProtoMessage() {}

func (x *VoteOwnerMessage) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteOwnerMessage.ProtoReflect.Descriptor instead.
func (*VoteOwnerMessage) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{33}
}

func (x *VoteOwnerMessage) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *VoteOwnerMessage) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *VoteOwnerMessage) GetSequential() bool {
	if x != nil {
		return x.Sequential
	}
	return false
}

type VoteStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VoteId string                `protobuf:"bytes,1,opt,name=vote_id,json=vt,proto3" json:"vote_id,omitempty"`
	Status VoteStatus_StatusType `protobuf:"varint,2,opt,name=status,json=st,proto3,enum=omega.VoteStatus_StatusType" json:"status,omitempty"`
}

func (x *VoteStatus) Reset() {
	*x = VoteStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_omega_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VoteStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VoteStatus) ProtoMessage() {}

func (x *VoteStatus) ProtoReflect() protoreflect.Message {
	mi := &file_omega_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VoteStatus.ProtoReflect.Descriptor instead.
func (*VoteStatus) Descriptor() ([]byte, []int) {
	return file_omega_proto_rawDescGZIP(), []int{34}
}

func (x *VoteStatus) GetVoteId() string {
	if x != nil {
		return x.VoteId
	}
	return ""
}

func (x *VoteStatus) GetStatus() VoteStatus_StatusType {
	if x != nil {
		return x.Status
	}
	return VoteStatus_Allow
}

var File_omega_proto protoreflect.FileDescriptor

var file_omega_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6f,
	0x6d, 0x65, 0x67, 0x61, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x9d, 0x02, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x20, 0x0a, 0x0b,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x63, 0x61,
	0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x1e, 0x0a, 0x0d, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x13, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x26, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x11, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x22, 0xc2, 0x12, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x46, 0x72,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x69, 0x12, 0x30,
	0x0a, 0x05, 0x63, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e,
	0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69, 0x74, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x01, 0x63,
	0x12, 0x2f, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1b, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x2e, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x01,
	0x76, 0x12, 0x18, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x74, 0x12, 0x1e, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6d, 0x65,
	0x67, 0x61, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x01, 0x65, 0x12, 0x15, 0x0a, 0x0a, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x01, 0x6d, 0x12, 0x1e, 0x0a, 0x12, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x72, 0x5f, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02,
	0x72, 0x6d, 0x12, 0x24, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x50,
	0x69, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x12, 0x21, 0x0a, 0x04, 0x50,
	0x6f, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x6f, 0x6d, 0x65, 0x67,
	0x61, 0x2e, 0x50, 0x6f, 0x6e, 0x67, 0x48, 0x00, 0x52, 0x04, 0x50, 0x6f, 0x6e, 0x67, 0x12, 0x24,
	0x0a, 0x05, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x18, 0x10, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e,
	0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x53,
	0x74, 0x61, 0x63, 0x6b, 0x12, 0x30, 0x0a, 0x09, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x48, 0x00, 0x52, 0x09, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x24, 0x0a, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x18,
	0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x48, 0x00, 0x52, 0x05, 0x48, 0x65, 0x6c, 0x6c, 0x6f, 0x12, 0x33, 0x0a, 0x0a,
	0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x69, 0x6d, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d,
	0x65, 0x12, 0x57, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x64, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1d, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61,
	0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x48, 0x00, 0x52, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x40, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x18, 0xc8, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x47, 0x65, 0x74, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0e,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x18, 0xc9,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x53, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0e,
	0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x3d,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18,
	0xca, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0d,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x37, 0x0a,
	0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0xcb, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x4a, 0x6f, 0x69, 0x6e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00, 0x52, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x18, 0xcc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e,
	0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x48, 0x00, 0x52, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x3a, 0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x18, 0xcd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6d, 0x65, 0x67,
	0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x48, 0x00,
	0x52, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x40,
	0x0a, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0xce, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00,
	0x52, 0x0e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x12, 0x3a, 0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0xd0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x4f, 0x0a, 0x13,
	0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0xd1, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6f, 0x6d, 0x65,
	0x67, 0x61, 0x2e, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65,
	0x6c, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a,
	0x14, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xd3, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x6f,
	0x6d, 0x65, 0x67, 0x61, 0x2e, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x14, 0x52, 0x65, 0x70,
	0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x12, 0x37, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x18, 0xe6, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e,
	0x47, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x47,
	0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x37, 0x0a, 0x0b, 0x53, 0x65,
	0x74, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x18, 0xe7, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0b, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x34, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74,
	0x65, 0x18, 0xe8, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x2e, 0x0a, 0x08, 0x4a, 0x6f, 0x69,
	0x6e, 0x56, 0x6f, 0x74, 0x65, 0x18, 0xe9, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6f,
	0x6d, 0x65, 0x67, 0x61, 0x2e, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x48, 0x00, 0x52,
	0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09, 0x4c, 0x65, 0x61,
	0x76, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x18, 0xea, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x31, 0x0a, 0x09,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x18, 0xeb, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x10, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x56, 0x6f,
	0x74, 0x65, 0x48, 0x00, 0x52, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12,
	0x37, 0x0a, 0x0b, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xec,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f,
	0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0b, 0x56, 0x6f, 0x74,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65,
	0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x18, 0xed, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x48, 0x00, 0x52, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x31,
	0x0a, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0xee, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x56, 0x6f, 0x74, 0x65, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x12, 0x46, 0x0a, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xef, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x6f,
	0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x10, 0x56, 0x6f, 0x74, 0x65, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x34, 0x0a, 0x0a, 0x56, 0x6f, 0x74,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0xf0, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x48, 0x00, 0x52, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x40, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x18, 0xfa, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x48,
	0x00, 0x52, 0x0e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x12, 0x40, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x18, 0xfb, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f, 0x6d, 0x65,
	0x67, 0x61, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xfc, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x6f,
	0x6d, 0x65, 0x67, 0x61, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x43, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0xfd, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x16, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48, 0x00, 0x52, 0x0f, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x46,
	0x72, 0x61, 0x6d, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x6c, 0x61,
	0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x10, 0x00, 0x12, 0x11, 0x0a, 0x0d, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x10, 0x01, 0x12, 0x16,
	0x0a, 0x12, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x65,
	0x70, 0x6c, 0x61, 0x79, 0x10, 0x02, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x10, 0x03, 0x12,
	0x15, 0x0a, 0x11, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x10, 0x04, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x70, 0x6c, 0x61,
	0x79, 0x10, 0x05, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x10, 0x09, 0x22, 0x1a, 0x0a, 0x07, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0f,
	0x0a, 0x0b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x10, 0x00, 0x42,
	0x06, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x07, 0x0a, 0x05, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x22, 0x06, 0x0a, 0x04, 0x50, 0x69, 0x6e, 0x67, 0x22, 0x06, 0x0a, 0x04, 0x50, 0x6f, 0x6e, 0x67,
	0x22, 0x47, 0x0a, 0x05, 0x53, 0x74, 0x61, 0x63, 0x6b, 0x12, 0x16, 0x0a, 0x0b, 0x73, 0x74, 0x61,
	0x63, 0x6b, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x63, 0x12, 0x26, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x13, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x69,
	0x74, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x01, 0x66, 0x22, 0x1f, 0x0a, 0x09, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6d, 0x22, 0x4e, 0x0a, 0x05, 0x48, 0x65,
	0x6c, 0x6c, 0x6f, 0x12, 0x15, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x14, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62,
	0x12, 0x18, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x22, 0x45, 0x0a, 0x0a, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x09, 0x75, 0x6e, 0x69, 0x78,
	0x5f, 0x6e, 0x61, 0x6e, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52,
	0x01, 0x6e, 0x12, 0x1d, 0x0a, 0x0e, 0x75, 0x6e, 0x69, 0x78, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01,
	0x74, 0x22, 0xa8, 0x01, 0x0a, 0x16, 0x50, 0x6c, 0x61, 0x79, 0x62, 0x61, 0x63, 0x6b, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x0a,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x65, 0x61, 0x12, 0x13,
	0x0a, 0x07, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6e, 0x69, 0x12, 0x20, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x6c, 0x75,
	0x6d, 0x65, 0x52, 0x01, 0x76, 0x12, 0x10, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x63, 0x12, 0x13, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x65, 0x72,
	0x73, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x69, 0x76, 0x22, 0x96, 0x01, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12,
	0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x01, 0x64, 0x12, 0x16, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63,
	0x68, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x6f, 0x12, 0x1a, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x02, 0x63, 0x61, 0x22, 0x7a, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x01,
	0x64, 0x12, 0x16, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x68, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6e, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x66,
	0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01,
	0x6f, 0x22, 0x0f, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x22, 0xc0, 0x02, 0x0a, 0x0b, 0x4a, 0x6f, 0x69, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x12, 0x16, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x68, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6e, 0x12, 0x36, 0x0a, 0x10, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03,
	0x63, 0x68, 0x6d, 0x12, 0x15, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x14, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62,
	0x12, 0x18, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x35, 0x0a, 0x10, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x02, 0x73,
	0x6d, 0x12, 0x0e, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01,
	0x6b, 0x12, 0x0f, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x72, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x6f, 0x12, 0x1a, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30,
	0x01, 0x52, 0x02, 0x63, 0x61, 0x22, 0x54, 0x0a, 0x0c, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63, 0x68, 0x12, 0x15, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x73, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x6f, 0x22, 0x4d, 0x0a, 0x0c, 0x43,
	0x6c, 0x6f, 0x73, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x12, 0x16, 0x0a, 0x0a, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x6b, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x6f, 0x22, 0xd4, 0x01, 0x0a, 0x0e, 0x43,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x63, 0x68, 0x12, 0x18, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x73, 0x12,
	0x12, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x6d, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x01, 0x6f, 0x12, 0x14, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62,
	0x12, 0x18, 0x0a, 0x0c, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x16, 0x0a, 0x0a, 0x73, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02,
	0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x0b, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x02, 0x72,
	0x6c, 0x22, 0xba, 0x01, 0x0a, 0x13, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x4f, 0x77, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x63,
	0x68, 0x12, 0x18, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x73, 0x12, 0x12, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6d, 0x12,
	0x15, 0x0a, 0x06, 0x6f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42,
	0x02, 0x30, 0x01, 0x52, 0x01, 0x6f, 0x12, 0x14, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x18, 0x0a, 0x0c,
	0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x73, 0x6e, 0x12, 0x16, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e,
	0x74, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73, 0x65, 0x22, 0x71,
	0x0a, 0x0c, 0x43, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x16,
	0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x02, 0x63, 0x68, 0x12, 0x17, 0x0a, 0x0b, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x6f, 0x63, 0x12,
	0x1e, 0x0a, 0x12, 0x70, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x70, 0x63, 0x12,
	0x10, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01,
	0x63, 0x22, 0xa6, 0x01, 0x0a, 0x14, 0x52, 0x65, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x68, 0x61, 0x6e,
	0x6e, 0x65, 0x6c, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x0a, 0x63, 0x68,
	0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02,
	0x63, 0x68, 0x12, 0x18, 0x0a, 0x08, 0x65, 0x6e, 0x64, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x65, 0x61, 0x12, 0x13, 0x0a, 0x07,
	0x6e, 0x65, 0x78, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x6e,
	0x69, 0x12, 0x20, 0x0a, 0x06, 0x76, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x0d, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65,
	0x52, 0x01, 0x76, 0x12, 0x10, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x01, 0x63, 0x12, 0x13, 0x0a, 0x07, 0x69, 0x6e, 0x76, 0x65, 0x72, 0x73, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x69, 0x76, 0x22, 0x78, 0x0a, 0x0e, 0x47, 0x65,
	0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04,
	0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72,
	0x75, 0x63, 0x74, 0x52, 0x01, 0x64, 0x12, 0x15, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x14, 0x0a,
	0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x75, 0x62, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x6e, 0x22, 0x62, 0x0a, 0x0e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x01, 0x64,
	0x12, 0x15, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6e, 0x22, 0x6e, 0x0a, 0x0e, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x0c, 0x66, 0x72,
	0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x66, 0x73, 0x12, 0x16, 0x0a, 0x0a, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6d,
	0x12, 0x16, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73, 0x65, 0x22, 0x71, 0x0a, 0x0f, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x0c, 0x66,
	0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x66, 0x73, 0x12, 0x18, 0x0a, 0x0b, 0x74, 0x6f, 0x5f, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x03, 0x74, 0x73, 0x73, 0x12,
	0x12, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x6d, 0x12, 0x16, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73, 0x65, 0x22, 0x79, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x56, 0x6f, 0x74, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x74, 0x12,
	0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6e,
	0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x01, 0x64, 0x12, 0x1a, 0x0a, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02,
	0x30, 0x01, 0x52, 0x02, 0x63, 0x61, 0x22, 0x5d, 0x0a, 0x0b, 0x53, 0x65, 0x74, 0x56, 0x6f, 0x74,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x74, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6e, 0x12, 0x28, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75,
	0x63, 0x74, 0x52, 0x01, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56,
	0x6f, 0x74, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x08, 0x4a, 0x6f, 0x69, 0x6e, 0x56, 0x6f, 0x74, 0x65,
	0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x02, 0x76, 0x74, 0x12, 0x0f, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x01, 0x6e, 0x12, 0x33, 0x0a, 0x0d, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x03, 0x76, 0x74, 0x6d, 0x12, 0x15, 0x0a, 0x0a, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x01, 0x73, 0x12, 0x35, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x02, 0x73, 0x6d, 0x12, 0x0e, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6b, 0x12, 0x28, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74,
	0x52, 0x01, 0x64, 0x12, 0x1a, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61,
	0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x30, 0x01, 0x52, 0x02, 0x63, 0x61, 0x22,
	0x37, 0x0a, 0x09, 0x4c, 0x65, 0x61, 0x76, 0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x07,
	0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76,
	0x74, 0x12, 0x15, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x73, 0x22, 0x30, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x56, 0x6f, 0x74, 0x65, 0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x74, 0x12, 0x0e, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6b, 0x22, 0x9d, 0x01, 0x0a, 0x0b, 0x56,
	0x6f, 0x74, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x74, 0x12,
	0x18, 0x0a, 0x0c, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x66, 0x73, 0x12, 0x14, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12,
	0x12, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x01, 0x6d, 0x12, 0x16, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x74, 0x69, 0x61,
	0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73, 0x65, 0x12, 0x1d, 0x0a, 0x04, 0x72,
	0x6f, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0b, 0x2e, 0x6f, 0x6d, 0x65, 0x67,
	0x61, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x02, 0x72, 0x6c, 0x22, 0x7d, 0x0a, 0x0a, 0x56, 0x6f,
	0x74, 0x65, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x74, 0x12, 0x15, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x01, 0x73, 0x12, 0x14, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x75, 0x62, 0x12, 0x1b, 0x0a, 0x0e, 0x76, 0x6f,
	0x74, 0x65, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x76, 0x74, 0x6f, 0x12, 0x10, 0x0a, 0x04, 0x64, 0x65, 0x6e, 0x79, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x64, 0x65, 0x22, 0x30, 0x0a, 0x09, 0x56, 0x6f, 0x74,
	0x65, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x13, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x76, 0x74, 0x12, 0x0e, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6b, 0x22, 0x53, 0x0a, 0x10, 0x56,
	0x6f, 0x74, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x13, 0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x76, 0x74, 0x12, 0x12, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x01, 0x6d, 0x12, 0x16, 0x0a, 0x0a, 0x73, 0x65, 0x71, 0x75,
	0x65, 0x6e, 0x74, 0x69, 0x61, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x02, 0x73, 0x65,
	0x22, 0x76, 0x0a, 0x0a, 0x56, 0x6f, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x13,
	0x0a, 0x07, 0x76, 0x6f, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x76, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x2e, 0x56, 0x6f, 0x74, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x02, 0x73, 0x74, 0x22, 0x21, 0x0a, 0x0a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x10, 0x00, 0x12, 0x08,
	0x0a, 0x04, 0x44, 0x65, 0x6e, 0x79, 0x10, 0x01, 0x2a, 0x47, 0x0a, 0x04, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x0b, 0x0a, 0x07, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x6c, 0x6c, 0x10, 0x00, 0x12, 0x0d, 0x0a,
	0x09, 0x52, 0x6f, 0x6c, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09,
	0x52, 0x6f, 0x6c, 0x65, 0x4f, 0x77, 0x6e, 0x65, 0x72, 0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x52,
	0x6f, 0x6c, 0x65, 0x50, 0x61, 0x72, 0x74, 0x69, 0x63, 0x69, 0x70, 0x61, 0x74, 0x6f, 0x72, 0x10,
	0x03, 0x2a, 0x6e, 0x0a, 0x06, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x50, 0x65, 0x65, 0x6b, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x56,
	0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x77, 0x65, 0x73, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a,
	0x09, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4c, 0x6f, 0x77, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c,
	0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x4d, 0x65, 0x64, 0x69, 0x75, 0x6d, 0x10, 0x03, 0x12, 0x0e,
	0x0a, 0x0a, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x10, 0x04, 0x12, 0x11,
	0x0a, 0x0d, 0x56, 0x6f, 0x6c, 0x75, 0x6d, 0x65, 0x48, 0x69, 0x67, 0x68, 0x65, 0x73, 0x74, 0x10,
	0x05, 0x42, 0x50, 0x5a, 0x4e, 0x67, 0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f,
	0x6b, 0x6b, 0x6c, 0x61, 0x62, 0x2d, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x65, 0x6e, 0x74, 0x75, 0x72,
	0x65, 0x2d, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x2f, 0x67, 0x75, 0x6e, 0x64, 0x61, 0x6d,
	0x2f, 0x67, 0x75, 0x6e, 0x64, 0x61, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2d, 0x67, 0x6f, 0x6c, 0x61, 0x6e, 0x67, 0x2f, 0x6f, 0x6d, 0x65, 0x67, 0x61, 0x3b, 0x6f, 0x6d,
	0x65, 0x67, 0x61, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_omega_proto_rawDescOnce sync.Once
	file_omega_proto_rawDescData = file_omega_proto_rawDesc
)

func file_omega_proto_rawDescGZIP() []byte {
	file_omega_proto_rawDescOnce.Do(func() {
		file_omega_proto_rawDescData = protoimpl.X.CompressGZIP(file_omega_proto_rawDescData)
	})
	return file_omega_proto_rawDescData
}

var file_omega_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_omega_proto_msgTypes = make([]protoimpl.MessageInfo, 35)
var file_omega_proto_goTypes = []interface{}{
	(Role)(0),                      // 0: omega.Role
	(Volume)(0),                    // 1: omega.Volume
	(TransitFrame_FrameClass)(0),   // 2: omega.TransitFrame.FrameClass
	(TransitFrame_Version)(0),      // 3: omega.TransitFrame.Version
	(VoteStatus_StatusType)(0),     // 4: omega.VoteStatus.StatusType
	(*Error)(nil),                  // 5: omega.Error
	(*TransitFrame)(nil),           // 6: omega.TransitFrame
	(*Close)(nil),                  // 7: omega.Close
	(*Ping)(nil),                   // 8: omega.Ping
	(*Pong)(nil),                   // 9: omega.Pong
	(*Stack)(nil),                  // 10: omega.Stack
	(*Broadcast)(nil),              // 11: omega.Broadcast
	(*Hello)(nil),                  // 12: omega.Hello
	(*ServerTime)(nil),             // 13: omega.ServerTime
	(*PlaybackChannelMessage)(nil), // 14: omega.PlaybackChannelMessage
	(*GetChannelMeta)(nil),         // 15: omega.GetChannelMeta
	(*SetChannelMeta)(nil),         // 16: omega.SetChannelMeta
	(*CreateChannel)(nil),          // 17: omega.CreateChannel
	(*JoinChannel)(nil),            // 18: omega.JoinChannel
	(*LeaveChannel)(nil),           // 19: omega.LeaveChannel
	(*CloseChannel)(nil),           // 20: omega.CloseChannel
	(*ChannelMessage)(nil),         // 21: omega.ChannelMessage
	(*ChannelOwnerMessage)(nil),    // 22: omega.ChannelOwnerMessage
	(*ChannelCount)(nil),           // 23: omega.ChannelCount
	(*ReplayChannelMessage)(nil),   // 24: omega.ReplayChannelMessage
	(*GetSessionMeta)(nil),         // 25: omega.GetSessionMeta
	(*SetSessionMeta)(nil),         // 26: omega.SetSessionMeta
	(*SessionMessage)(nil),         // 27: omega.SessionMessage
	(*SessionsMessage)(nil),        // 28: omega.SessionsMessage
	(*GetVoteMeta)(nil),            // 29: omega.GetVoteMeta
	(*SetVoteMeta)(nil),            // 30: omega.SetVoteMeta
	(*CreateVote)(nil),             // 31: omega.CreateVote
	(*JoinVote)(nil),               // 32: omega.JoinVote
	(*LeaveVote)(nil),              // 33: omega.LeaveVote
	(*CloseVote)(nil),              // 34: omega.CloseVote
	(*VoteMessage)(nil),            // 35: omega.VoteMessage
	(*VoteSelect)(nil),             // 36: omega.VoteSelect
	(*VoteCount)(nil),              // 37: omega.VoteCount
	(*VoteOwnerMessage)(nil),       // 38: omega.VoteOwnerMessage
	(*VoteStatus)(nil),             // 39: omega.VoteStatus
	(*_struct.Struct)(nil),         // 40: google.protobuf.Struct
}
var file_omega_proto_depIdxs = []int32{
	40, // 0: omega.Error.data:type_name -> google.protobuf.Struct
	2,  // 1: omega.TransitFrame.class:type_name -> omega.TransitFrame.FrameClass
	3,  // 2: omega.TransitFrame.version:type_name -> omega.TransitFrame.Version
	5,  // 3: omega.TransitFrame.error:type_name -> omega.Error
	7,  // 4: omega.TransitFrame.Close:type_name -> omega.Close
	8,  // 5: omega.TransitFrame.Ping:type_name -> omega.Ping
	9,  // 6: omega.TransitFrame.Pong:type_name -> omega.Pong
	10, // 7: omega.TransitFrame.Stack:type_name -> omega.Stack
	11, // 8: omega.TransitFrame.Broadcast:type_name -> omega.Broadcast
	12, // 9: omega.TransitFrame.Hello:type_name -> omega.Hello
	13, // 10: omega.TransitFrame.ServerTime:type_name -> omega.ServerTime
	14, // 11: omega.TransitFrame.PlaybackChannelMessage:type_name -> omega.PlaybackChannelMessage
	15, // 12: omega.TransitFrame.GetChannelMeta:type_name -> omega.GetChannelMeta
	16, // 13: omega.TransitFrame.SetChannelMeta:type_name -> omega.SetChannelMeta
	17, // 14: omega.TransitFrame.CreateChannel:type_name -> omega.CreateChannel
	18, // 15: omega.TransitFrame.JoinChannel:type_name -> omega.JoinChannel
	19, // 16: omega.TransitFrame.LeaveChannel:type_name -> omega.LeaveChannel
	20, // 17: omega.TransitFrame.CloseChannel:type_name -> omega.CloseChannel
	21, // 18: omega.TransitFrame.ChannelMessage:type_name -> omega.ChannelMessage
	23, // 19: omega.TransitFrame.ChannelCount:type_name -> omega.ChannelCount
	22, // 20: omega.TransitFrame.ChannelOwnerMessage:type_name -> omega.ChannelOwnerMessage
	24, // 21: omega.TransitFrame.ReplayChannelMessage:type_name -> omega.ReplayChannelMessage
	29, // 22: omega.TransitFrame.GetVoteMeta:type_name -> omega.GetVoteMeta
	30, // 23: omega.TransitFrame.SetVoteMeta:type_name -> omega.SetVoteMeta
	31, // 24: omega.TransitFrame.CreateVote:type_name -> omega.CreateVote
	32, // 25: omega.TransitFrame.JoinVote:type_name -> omega.JoinVote
	33, // 26: omega.TransitFrame.LeaveVote:type_name -> omega.LeaveVote
	34, // 27: omega.TransitFrame.CloseVote:type_name -> omega.CloseVote
	35, // 28: omega.TransitFrame.VoteMessage:type_name -> omega.VoteMessage
	36, // 29: omega.TransitFrame.VoteSelect:type_name -> omega.VoteSelect
	37, // 30: omega.TransitFrame.VoteCount:type_name -> omega.VoteCount
	38, // 31: omega.TransitFrame.VoteOwnerMessage:type_name -> omega.VoteOwnerMessage
	39, // 32: omega.TransitFrame.VoteStatus:type_name -> omega.VoteStatus
	25, // 33: omega.TransitFrame.GetSessionMeta:type_name -> omega.GetSessionMeta
	26, // 34: omega.TransitFrame.SetSessionMeta:type_name -> omega.SetSessionMeta
	27, // 35: omega.TransitFrame.SessionMessage:type_name -> omega.SessionMessage
	28, // 36: omega.TransitFrame.SessionsMessage:type_name -> omega.SessionsMessage
	6,  // 37: omega.Stack.frames:type_name -> omega.TransitFrame
	1,  // 38: omega.PlaybackChannelMessage.volume:type_name -> omega.Volume
	40, // 39: omega.GetChannelMeta.data:type_name -> google.protobuf.Struct
	40, // 40: omega.SetChannelMeta.data:type_name -> google.protobuf.Struct
	40, // 41: omega.JoinChannel.channel_metadata:type_name -> google.protobuf.Struct
	40, // 42: omega.JoinChannel.session_metadata:type_name -> google.protobuf.Struct
	0,  // 43: omega.ChannelMessage.role:type_name -> omega.Role
	1,  // 44: omega.ReplayChannelMessage.volume:type_name -> omega.Volume
	40, // 45: omega.GetSessionMeta.data:type_name -> google.protobuf.Struct
	40, // 46: omega.SetSessionMeta.data:type_name -> google.protobuf.Struct
	40, // 47: omega.GetVoteMeta.data:type_name -> google.protobuf.Struct
	40, // 48: omega.SetVoteMeta.data:type_name -> google.protobuf.Struct
	40, // 49: omega.JoinVote.vote_metadata:type_name -> google.protobuf.Struct
	40, // 50: omega.JoinVote.session_metadata:type_name -> google.protobuf.Struct
	40, // 51: omega.JoinVote.data:type_name -> google.protobuf.Struct
	0,  // 52: omega.VoteMessage.role:type_name -> omega.Role
	4,  // 53: omega.VoteStatus.status:type_name -> omega.VoteStatus.StatusType
	54, // [54:54] is the sub-list for method output_type
	54, // [54:54] is the sub-list for method input_type
	54, // [54:54] is the sub-list for extension type_name
	54, // [54:54] is the sub-list for extension extendee
	0,  // [0:54] is the sub-list for field type_name
}

func init() { file_omega_proto_init() }
func file_omega_proto_init() {
	if File_omega_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_omega_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransitFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Close); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Ping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pong); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Stack); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Broadcast); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hello); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PlaybackChannelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChannelMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetChannelMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseChannel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelOwnerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChannelCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReplayChannelMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetSessionMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSessionMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionsMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVoteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetVoteMeta); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*JoinVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LeaveVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseVote); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteSelect); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteCount); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteOwnerMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_omega_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VoteStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_omega_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*TransitFrame_Close)(nil),
		(*TransitFrame_Ping)(nil),
		(*TransitFrame_Pong)(nil),
		(*TransitFrame_Stack)(nil),
		(*TransitFrame_Broadcast)(nil),
		(*TransitFrame_Hello)(nil),
		(*TransitFrame_ServerTime)(nil),
		(*TransitFrame_PlaybackChannelMessage)(nil),
		(*TransitFrame_GetChannelMeta)(nil),
		(*TransitFrame_SetChannelMeta)(nil),
		(*TransitFrame_CreateChannel)(nil),
		(*TransitFrame_JoinChannel)(nil),
		(*TransitFrame_LeaveChannel)(nil),
		(*TransitFrame_CloseChannel)(nil),
		(*TransitFrame_ChannelMessage)(nil),
		(*TransitFrame_ChannelCount)(nil),
		(*TransitFrame_ChannelOwnerMessage)(nil),
		(*TransitFrame_ReplayChannelMessage)(nil),
		(*TransitFrame_GetVoteMeta)(nil),
		(*TransitFrame_SetVoteMeta)(nil),
		(*TransitFrame_CreateVote)(nil),
		(*TransitFrame_JoinVote)(nil),
		(*TransitFrame_LeaveVote)(nil),
		(*TransitFrame_CloseVote)(nil),
		(*TransitFrame_VoteMessage)(nil),
		(*TransitFrame_VoteSelect)(nil),
		(*TransitFrame_VoteCount)(nil),
		(*TransitFrame_VoteOwnerMessage)(nil),
		(*TransitFrame_VoteStatus)(nil),
		(*TransitFrame_GetSessionMeta)(nil),
		(*TransitFrame_SetSessionMeta)(nil),
		(*TransitFrame_SessionMessage)(nil),
		(*TransitFrame_SessionsMessage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_omega_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   35,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_omega_proto_goTypes,
		DependencyIndexes: file_omega_proto_depIdxs,
		EnumInfos:         file_omega_proto_enumTypes,
		MessageInfos:      file_omega_proto_msgTypes,
	}.Build()
	File_omega_proto = out.File
	file_omega_proto_rawDesc = nil
	file_omega_proto_goTypes = nil
	file_omega_proto_depIdxs = nil
}
